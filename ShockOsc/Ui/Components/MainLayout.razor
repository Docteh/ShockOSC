@using OpenShock.ShockOsc.Logging
@using OpenShock.ShockOsc.Ui.Components.Tabs
@using OpenShock.ShockOsc.Ui.Utils
@inject ISnackbar Snackbar
@inherits LayoutComponentBase


@page "/main"

<style>
    .childs-width-100 > * {
        width: 100%;
    }
    
</style>

<MudThemeProvider Theme="ThemeDefinition.ShockOscTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <div class="d-flex" style="width: 100vw; height: 100vh">

        <SideBar @bind-CurrentTab="_currentTabType"/>
        
        <MudDivider Vertical="true" FlexItem="true"/>

        <div Style="width: 100%; height: 100%; overflow-y: auto; overflow-x: hidden" Class="pa-6">
            @switch (_currentTabType)
            {
                case TabType.Dashboard:
                    <DashboardTab/>
                    break;
                case TabType.Groups:
                    <GroupsTab/>
                    break;
                case TabType.Config:
                    <ConfigTab/>
                    break;
                case TabType.Chatbox:
                    <ChatboxTab/>
                    break;
                case TabType.AppSettings:
                    <AppSettingsTab/>
                    break;
                case TabType.Shockers:
                    <ShockersTab/>
                    break;
                case TabType.Debug:
                    <DebugTab/>
                    break;
                case TabType.Logs:
                    <LogsTab/>
                    break;
            }
        </div>
    </div>
</MudLayout>

@code {

    private TabType _currentTabType = TabType.Dashboard;
    
    private void MsgNoty(string msg, Severity severity)
    {
        Snackbar.Add(msg, severity);
    }

    protected override void OnInitialized()
    {
        UiLogSink.NotificationAction = MsgNoty;
    }

}