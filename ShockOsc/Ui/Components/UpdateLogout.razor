@using OpenShock.ShockOsc.Config
@using OpenShock.ShockOsc.Services
@inject IDialogService Dialog
@inject IDialogService DialogService
@inject ConfigManager ConfigManager
@inject Updater Updater
@inject NavigationManager NavigationManager

@code {
    private readonly DialogOptions _dialogOptions = new() { NoHeader = true, DisableBackdropClick = true };

    private void OpenUpdateDialog()
    {
        DialogService.Show<UpdateDialog>("Update", _dialogOptions);
    }

    protected override async Task OnInitializedAsync()
    {
        Updater.UpdateAvailable.OnValueChanged += v =>
        {
            InvokeAsync(StateHasChanged);
            OpenUpdateDialog();
        };

        await Updater.CheckUpdate();
    }

    private async Task Logout()
    {
        ConfigManager.Config.OpenShock.Token = string.Empty;
        await ConfigManager.SaveAsync();
        
        NavigationManager.NavigateTo("/");
    }
}

<div class="d-flex flex-childs-full-width gap-5">

    <MudTooltip Text="Logout">
        <MudButton Color="Color.Primary" @onclick="Logout" Size=" Size.Small" Variant="Variant.Filled" Class="mud-button-full-width">
            <MudIcon Icon="@Icons.Material.Filled.Logout"/>
        </MudButton>
    </MudTooltip>


    <MudTooltip Text="@(Updater.UpdateAvailable.Value ? "Update" : "You are up-to-date!")">
        <MudButton Disabled="!Updater.UpdateAvailable.Value" Color="Color.Primary" @onclick="OpenUpdateDialog" Size="Size.Small" Variant="Variant.Filled" Class="mud-button-full-width">
            <MudIcon Icon="@(Updater.UpdateAvailable.Value ? Icons.Material.Filled.Update : Icons.Material.Filled.UpdateDisabled)"/>
        </MudButton>
    </MudTooltip>

</div>

<style>
    .flex-childs-full-width >* {
        width:  100%;
    }
</style>