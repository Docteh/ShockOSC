@namespace OpenShock.ShockOsc.Ui.Components
@using MudBlazor.Utilities
@using MudBlazor.Interfaces
@inherits MudBaseSelectItem

<div @attributes="UserAttributes" class="@Classname" disabled="@Disabled" style="@Style">
    @{
    <div @onclick="EventUtil.AsNonRenderingEventHandler<MouseEventArgs>(OnClickHandler)"
         class="@LinkClassname"
         ActiveClass="@ActiveClass">
        @if (!string.IsNullOrEmpty(Icon))
        {
            <MudIcon Icon="@Icon" Color="@IconColor" Class="@IconClassname"/>
        }
        <div Class="mud-nav-link-text">
            @ChildContent
        </div>
    </div>}
</div>

@code {

    protected string Classname =>
        new CssBuilder("mud-nav-item")
            .AddClass(Class)
            .Build();

    protected string LinkClassname =>
        new CssBuilder("mud-nav-link")
            .AddClass($"mud-nav-link-disabled", Disabled)
            .AddClass($"mud-ripple", !DisableRipple && !Disabled)
            .AddClass(ActiveClass, IsActive)
            .Build();

    protected string IconClassname =>
        new CssBuilder("mud-nav-link-icon")
            .AddClass($"mud-nav-link-icon-default", IconColor == Color.Default)
            .Build();

    /// <summary>
    /// Icon to use if set.
    /// </summary>
    [Parameter]
    [Category(CategoryTypes.NavMenu.Behavior)]
    public string? Icon { get; set; }

    /// <summary>
    /// The color of the icon. It supports the theme colors, default value uses the themes drawer icon color.
    /// </summary>
    [Parameter]
    [Category(CategoryTypes.NavMenu.Appearance)]
    public Color IconColor { get; set; } = Color.Default;

    /// <summary>
    /// User class names when active, separated by space.
    /// </summary>
    [Parameter]
    [Category(CategoryTypes.ComponentBase.Common)]
    public string ActiveClass { get; set; } = "active";

    [Parameter] public bool IsActive { get; set; }
}